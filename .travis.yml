dist: xenial
os: linux
language: minimal
cache:
  ccache: true
  directories:
    - depends/built
    - depends/sdk-sources
    - $HOME/.ccache
stages:
  - lint
  - test
env:
  global:
    - MAKEJOBS=-j4
    - RUN_UNIT_TESTS=false
    - RUN_FUNCTIONAL_TESTS=false
    - RUN_FUZZ_TESTS=false
    - DOCKER_NAME_TAG=ubuntu:18.04
    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
    - CCACHE_SIZE=100M
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - CCACHE_DIR=$HOME/.ccache
    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
    - SDK_URL=https://bitcoincore.org/depends-sources/sdks
    - WINEDEBUG=fixme-all
    - DOCKER_PACKAGES="build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache dpkg-dev make wget build-essential protobuf-compiler autoconf libssl-dev vim"

before_install:
  - set -o errexit; source .travis/test_03_before_install.sh

install:
  - set -o errexit; source .travis/test_04_install.sh

before_script:
  - set -o errexit; source .travis/test_05_before_script.sh

script:
  - if [ $SECONDS -gt 1200 ]; then set +o errexit; echo "Travis early exit to cache current state"; false; else set -o errexit; source .travis/test_06_script_a.sh; fi
  - if [ $SECONDS -gt 1800 ]; then set +o errexit; echo "Travis early exit to cache current state"; false; else set -o errexit; source .travis/test_06_script_b.sh; fi

after_script:
  - echo $TRAVIS_COMMIT_RANGE
  - echo $TRAVIS_COMMIT_LOG

jobs:
  include:
    - stage: lint
      name: lint
      env: SHOULD_DEPLOY=0
      cache: false
      language: python
      python: "3.5"
      install:
        - set -o errexit; source .travis/lint_04_install.sh
      before_script:
        - set -o errexit; source .travis/lint_05_before_script.sh
      script:
        - set -o errexit; source .travis/lint_06_script.sh

    - stage: test
      name: "[Test] Linux 64-bit"
      env: >-
        SHOULD_DEPLOY=0
        RUN_UNIT_TESTS=true
        RUN_FUNCTIONAL_TESTS=true
        RUN_COV_REPORT=true
        HOST=x86_64-linux-gnu
        PACKAGES="build-essential libtool autotools-dev automake pkg-config bsdmainutils libattr1-dev make automake cmake curl g++-multilib binutils-gold python3 lcov python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev libcap-dev libseccomp-dev"
        DEP_OPTS="NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1"
        VERGE_CONFIG="--enable-lcov --disable-bench --enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports"

